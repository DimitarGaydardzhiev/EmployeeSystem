@model EmployeeViewModel
@{
    ViewData["Title"] = "Add Employee";
}

<h2>@ViewData["Title"]</h2>

@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "administrator",
        Value = "administrator"
    });
    listItems.Add(new SelectListItem
    {
        Text = "user",
        Value = "user",
        Selected = true
    });
}

<div class="row">
    <div class="col-md-4">
        <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
            <h4>Create a new employee account.</h4>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName)
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName)
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RoleId)
                @Html.DropDownListFor(model => model.RoleId, new SelectList(ViewBag.Roles, "Id", "Name"), new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PositionId)
                @Html.DropDownListFor(model => model.PositionId, new SelectList(ViewBag.Positions, "Id", "Name"), new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth)
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @value = "1" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StartingDate)
                @Html.EditorFor(model => model.StartingDate, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.StartingDate, "", new { @class = "text-danger" })
            </div>
            <button type="submit" class="btn btn-default">Register</button>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

<!-- Code to wire up your DatePicker -->
<script type="text/javascript">
    $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
        $('.date-picker').datepicker();
    })
</script>
